We will start by using a not so efficient solution, then move to something that is fast but does waste space and hopefully land in something that is both space and time efficient
1: Not efficient
2: Fast but waste space
3: Space & Time efficient


Now write a lookup method that does a linear search through all zip codes looking for a specific entry. Then, since the zip codes in the file are ordered, you can write a binary search method that does the same.
Write a small benchmark that searches for ”111 15” and ”984 99” and explain the results.



hash-string:
Running benchmark on searches from 1000 to 10000
SearchType   NumSearches   TimeMin(ms)   TimeMax(ms)   Average(ms)  Average/NumSearches(ns)
LinearSearch   1000   10147.00   25362.00   12020.70   12020.70
BinarySearch   1000   142.00   148.00   145.20   145.20
LinearSearch   2000   20567.00   21983.00   21066.50   10533.25
BinarySearch   2000   280.00   302.00   290.80   145.40
LinearSearch   4000   41320.00   42823.00   42056.20   10514.05
BinarySearch   4000   561.00   617.00   573.00   143.25
LinearSearch   8000   83213.00   86736.00   84564.00   10570.50
BinarySearch   8000   1092.00   1169.00   1128.70   141.09
LinearSearch   10000   103498.00   107397.00   105323.20   10532.32
BinarySearch   10000   1369.00   1439.00   1402.10   140.21


hash-int:
Running benchmark on searches from 1000 to 10000
SearchType   NumSearches   TimeMin(ms)   TimeMax(ms)   Average(ms)  Average/NumSearches(ns)
LinearSearch   1000   2843.00   5607.00   3329.80   3329.80
BinarySearch   1000   68.00   233.00   94.40   94.40
LinearSearch   2000   5715.00   5930.00   5831.50   2915.75
BinarySearch   2000   140.00   170.00   157.10   78.55
LinearSearch   4000   11268.00   11694.00   11453.40   2863.35
BinarySearch   4000   294.00   319.00   302.40   75.60
LinearSearch   8000   22570.00   23519.00   22947.20   2868.40
BinarySearch   8000   566.00   616.00   590.90   73.86
LinearSearch   10000   28416.00   29089.00   28609.30   2860.93
BinarySearch   10000   711.00   745.00   726.00   72.60


Use key as index